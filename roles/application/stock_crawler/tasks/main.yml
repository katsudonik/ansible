---
- name: vault_decrypt loop
  include_role:
    name: common/git_clone_pull
  with_items:
    - {url: "https://{{ git_remote_domain }}/raw/{{ git_user }}/{{ repository_name }}/{{ before }}/app/config/parameters.yml.prod?token={{ before_token }}", path: "/tmp/parameters.yml.prod.{{ project_name }}_{{ before }}"}
  loop_control:
    loop_var: git


- name: create log/config directory
  become_user: "{{ username }}"
  file: >
    path=~/spider_register/{{ item }}
    state=directory
    owner={{ username }}
    group={{ username }}
    mode=0755
  with_items:
    - 'log'
    - 'config'
  tags:
    - stock_crawler

#
# application config
#
- name: application config
  become: yes
  become_user: "{{ username }}"
  template: >
    src={{ item. src }}
    dest=~/spider_register/config/{{ item.dest }}
    mode=0755
  with_items:
    - { src: "register.{{ _env }}.yml", dest: register.yml }
    - { src: "logging.{{ _env }}.ini", dest: logging.ini }
  tags:
    - crawler/register
    - crawler/register-update

# permission
- name: Change src directory permission.
  become_user: "{{ username }}"
  file: path=~/spider_register/src owner=vcp group=vcp mode=0755 state=directory recurse=yes
  tags:
    - stock_crawler

- name: cythonize
  become_user: "{{ username }}"
  shell: mv spider_register.py spider_register.pyx
  args:
    chdir: ~/spider_register/src
  tags:
    - stock_crawler

- name: compile
  become_user: "{{ username }}"
  shell: |
    source ~/.bash_profile
    /home/vcp/.pyenv/versions/anaconda3-4.3.0/bin/python setup.py {{ item }}
  args:
    chdir: ~/spider_register/src
  with_items:
    - 'build_ext'
    - 'install_lib'
  tags:
    - stock_crawler

- name: setting logrotate to /etc/logrotate.d/spider_register
  template: >
    src={{ item. src }}
    dest={{ item.dest }}
    owner=root
    group=root
    mode=0644
  with_items:
    - { src: "logrotate", dest: /etc/logrotate.d/spider_register }
  tags:
    - stock_crawler
